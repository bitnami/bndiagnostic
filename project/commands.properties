commands=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
1.description=Crontab content for root user:
1.command=crontab
1.arguments=-l
1.workdir=${installdir}
1.outputfile=commands.output
1.platform=linux
2.description=Crontab content for bitnami user:
2.command=crontab
2.arguments=-l -u bitnami
2.workdir=${installdir}
2.outputfile=commands.output
2.platform=linux
3.description=Machine hostname:
3.command=echo
3.arguments=${hostname}
3.workdir=${installdir}
3.outputfile=commands.output
3.platform=linux
4.description=Check Apache path:
4.command=ps
4.arguments=aux | grep 'apache\|mysql\|nginx\|${installdir}\|php-fpm'
4.workdir=${installdir}
4.outputfile=commands.output
4.platform=linux
5.description=Get the ctlscript status
5.command=./ctlscript.sh
5.arguments=status
5.workdir=${installdir}
5.outputfile=commands.output
5.platform=linux
6.description=Check if port ${apache_server_port} is externally accessible:
6.command=nc
6.arguments=-zv -w5 ${hostname} ${apache_server_port}
6.workdir=${installdir}
6.outputfile=commands.output
6.platform=linux
7.description=Check if port ${apache_server_ssl_port} is externally accessible:
7.command=nc
7.arguments=-zv -w5 ${hostname} ${apache_server_ssl_port}
7.workdir=${installdir}
7.outputfile=commands.output
7.platform=linux
8.description=Check if lego is installed and which version:
8.command=which
8.arguments=lego
8.workdir=${installdir}/
8.outputfile=commands.output
8.platform=linux
9.description=Check lego version:
9.command=`which lego`
9.arguments=--version
9.workdir=${installdir}
9.outputfile=commands.output
9.platform=linux
10.description=Check Let's Encrypt permissions:
10.command=ls
10.arguments=-laR
10.workdir=${installdir}/letsencrypt
10.outputfile=permissions/letsencrypt.permissions
10.platform=linux
11.description=Copy first-boot.log:
11.command=cat
11.workdir=${installdir}/var/log
11.arguments=first-boot.log
11.outputfile=first-boot.log
11.platform=linux
12.description=Copy pre-start.log:
12.command=cat
12.workdir=${installdir}/var/log
12.arguments=pre-start.log
12.outputfile=pre-start.log
12.platform=linux
13.description=Copy post-start.log:
13.command=cat
13.workdir=${installdir}/var/log
13.arguments=post-start.log
13.outputfile=post-start.log
13.platform=linux
14.description=Check /etc/lego permissions:
14.command=ls
14.arguments=-laR
14.workdir=/etc/lego
14.outputfile=permissions/etclego.permissions
14.platform=linux
15.description=Check processes on ports ${apache_server_port} and ${apache_server_ssl_port}
15.command=netstat
15.arguments=-tulpn | grep "${apache_server_port}\|${apache_server_ssl_port}"
15.workdir=${installdir}
15.outputfile=commands.output
15.platform=linux
16.description=Check number of lines of Apache access log
16.command=wc
16.arguments=-l access_log
16.workdir=${installdir}/apache2/logs/
16.outputfile=commands.output
16.platform=linux
17.description=Check performance issues: Count number of requests for the 10 most active IP addresses in the last 100.000 requests
17.command=tail
17.arguments=-n 100000 access_log | awk '{print $1}' | sort | uniq -c | sort -nr | head -n 10 | awk '{print $1}'
17.workdir=${installdir}/apache2/logs/
17.outputfile=commands.output
17.platform=linux
18.description=Check memory usage for all current processes
18.command=ps
18.arguments=-e -orss=,args= | sort -b -k1,1n | awk '{print $1,$2}'
18.workdir=${installdir}
18.outputfile=commands.output
18.platform=linux
19.description=Check CPU usage for current processes
19.command=ps
19.arguments=-e -o pcpu,nice,state,cputime,args --sort -pcpu | awk '{print $1,$2,$3,$4,$5}'
19.workdir=${installdir}
19.outputfile=commands.output
19.platform=linux
20.description=Display amount of free and used memory in the system
20.command=free
20.arguments=-m
20.workdir=${installdir}
20.outputfile=commands.output
20.platform=linux
21.description=Check free amount of disk space
21.command=df
21.arguments=-h
21.workdir=${installdir}
21.outputfile=commands.output
21.platform=linux
22.description=Check free amount of inodes
22.command=df
22.arguments=-ih
22.workdir=${installdir}
22.outputfile=commands.output
22.platform=linux
23.description=Find directories with most files in installdir
23.command=find
23.arguments=. -type f | cut -d / -f 2 | sort | uniq -c | sort -n
23.workdir=${installdir}
23.outputfile=commands.output
23.platform=linux
24.description=Find biggest directories in installdir
24.command=du
24.arguments=-h . -d 1 | sort -h
24.workdir=${installdir}
24.outputfile=commands.output
24.platform=linux
25.description=Check which server type configuration has been applied
25.command=ls
25.arguments=-la bitnami/httpd.conf
25.workdir=${installdir}/apache2/conf
25.outputfile=commands.output
25.platform=linux
26.description=Get the list of WordPress installed plugins
26.command=export
26.arguments=PATH=${installdir}/apps/wordpress/bin:$PATH; if echo "base_stack_key=${base_stack_key}" | grep -iq wordpress; then wp plugin list --format=csv --allow-root; else echo "This asset is not WordPress"; fi
26.workdir=${installdir}
26.outputfile=wp_commands.output
26.platform=linux
27.description=Get the list of WordPress installed themes
27.command=export
27.arguments= PATH=${installdir}/apps/wordpress/bin:${installdir}/wp-cli/bin:$PATH; if echo "base_stack_key=${base_stack_key}" | grep -iq wordpress; then wp theme list --format=csv --allow-root; else echo "This asset is not WordPress"; fi
27.workdir=${installdir}
27.outputfile=wp_commands.output
27.platform=linux
28.description=Check gonit status
28.command=gonit
28.arguments=status
28.workdir=${installdir}
28.outputfile=commands.output
28.platform=linux
29.description=Check bitnami service status
29.command=service
29.arguments=bitnami status
29.workdir=${installdir}
29.outputfile=commands.output
29.platform=linux
